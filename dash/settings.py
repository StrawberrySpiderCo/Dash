"""
Django settings for dash project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/

Start up Notes

pip install -r requirements.txt
install postgres 
install rabbitmq
install apache
python manage.py makemigrations
python manage.py migrate 
celery -A dash worker -l info --pool=solo --purge
celery -A dash beat -l info
celery call  map.tasks.{{task}}
"""
import socket
import os
from pathlib import Path
from django.contrib.staticfiles.views import serve
from django_auth_ldap.config import LDAPSearch,LDAPSearchUnion
import ldap


#os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'dash.settings')
#django.setup()

def protected_serve(request, path, insecure=False, **kwargs):
    """
    View that serves static files, but with added MIME types.
    """
    response = serve(request, path, insecure=insecure, **kwargs)
    if path.endswith('.js'):
        response['Content-Type'] = 'application/javascript'
    return response



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-sghq-(mx-hkchv&x%wbbh$hb&644#**biczraln(*$)cg$kt58'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'django_auth_ldap.backend.LDAPBackend',
    
]


# Application definition
# Import the custom settings loader
AUTH_LDAP_SERVER_URI = 'ldap://174.135.120.210'
AUTH_LDAP_BIND_DN = 'CN=strawberry spider,OU=testOU,DC=dirar,DC=local'
AUTH_LDAP_BIND_PASSWORD = 'P@55w0rd1!'
AUTH_LDAP_USER_SEARCH = LDAPSearchUnion(LDAPSearch(f"OU=Techs,OU=Groups,DC=dirar,DC=local",ldap.SCOPE_SUBTREE,"(sAMAccountName=%(user)s)"),LDAPSearch(f"OU=Admins,OU=Groups,DC=dirar,DC=local",ldap.SCOPE_SUBTREE,"(sAMAccountName=%(user)s)"))

AUTH_LDAP_USER_ATTR_MAP = {
  "username": "sAMAccountName",
  "first_name": "givenName",
  "last_name": "sn",
  "email": "mail",
}



LOGIN_URL = '/login'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'siteInfo',
    'members',
    'map',
    'wiki',
    'project',
    'network',
    'tools'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  
    'dash.license_middleware.LicenseCheckMiddleware',
    'dash.ipmiddleware.CheckUserMiddleware',

    #'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'dash.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'map.context_processors.org_info',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CSRF_TRUSTED_ORIGINS = ['http://192.168.0.100']



WSGI_APPLICATION = 'dash.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
#   Open psql in the bin folder
# C:\Program Files\PostgreSQL\16\bin>psql -U postgres 
# CREATE DATABASE sbs
# net start postgresql-x64-15 
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'sbs',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Los_Angeles'

USE_I18N = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/Dash/static/'

#STATIC_ROOT = '/home/sbs/Dash/static'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

INTERNAL_IPS = [
    '127.0.0.1',
]
#STATICFILES_DIRS = [
#    os.path.join(BASE_DIR, 'static'),
#    os.path.join(BASE_DIR, 'static/images/Map_Photos'),
#    os.path.join(BASE_DIR, 'static/Javascript'),
#    os.path.join(BASE_DIR, 'static/assets/css/'),
#    os.path.join(BASE_DIR, 'static/assets/js/'),
#    os.path.join(BASE_DIR, 'static/assets/'),
#]

